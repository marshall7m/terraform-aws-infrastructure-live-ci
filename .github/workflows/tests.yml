name: "Tests"
on:
  pull_request:
    types: [ opened, synchronize, reopened ]

    branches:
      - master
    tags:
      - ci
      - tests  
    paths-ignore:
    - .gitignore
    - LICENSE.md
    - README.md

  push:
    branches:
    - master
    paths-ignore:
    - .gitignore
    - LICENSE.md
    - README.md

env:
  PYTEST_ADDOPTS: --color=yes
  PYTHON_VERSION: pypy-3.9
  AWS_REGION: us-west-2
  TF_VAR_testing_github_token: ${{ secrets.TESTING_GITHUB_TOKEN }}

jobs:
  # precommit:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/marshall7m/terrace:v0.1.2
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Hooks
  #       shell: bash
  #       run: |
  #         pre-commit install
  #         pre-commit run --all-files

  # unit:
  #   needs: precommit
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/marshall7m/terrace:v0.1.2
  #   services:
  #     postgres:
  #       image: postgres:10.14-alpine
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: mask sensitive
  #       run: echo "::add-mask::$TF_VAR_testing_github_token"

  #     - name: Configure AWS Credentials for remote workflow
  #       uses: aws-actions/configure-aws-credentials@v1
  #       if: ${{ !env.ACT }}
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Configure AWS Credentials for local workflow
  #       uses: aws-actions/configure-aws-credentials@v1
  #       if: ${{ env.ACT }}
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         architecture: x64

  #     - name: Tests
  #       id: pytest_unit
  #       shell: bash
  #       if: ${{ !env.ACT }}
  #       env:
  #         PGUSER: postgres
  #         PGPASSWORD: postgres
  #         PGDATABASE: postgres
  #         PGHOST: postgres
  #         PGPORT: 5432
  #       run: |
  #         source $VIRTUAL_ENV/bin/activate
  #         python3 -m pip install -r requirements.txt
  #         python3 -m pip install -e .
  #         pytest -vv tests/unit

  #     - name: Install Deps for local workflow
  #       id: install
  #       shell: bash
  #       if: ${{ env.ACT }}
  #       run: |
  #         bash ./runner_install_docker.sh

  #         apt-get -y update
  #         apt-get -y make g++ automake subversion cmake yarn musl-dev linux-headers \
  #         libffi-dev libxml2 libxml2-dev gcc libxslt-dev postgresql-dev postgresql-client

  #         apt-get clean
  #         rm -rf /var/lib/apt/lists/*
  #         rm -rf /tmp/*

  #     # using docker compose workaround until nektos/act handles services properly. See issue: https://github.com/nektos/act/issues/173
  #     - name: Tests
  #       id: act_pytest_unit
  #       shell: bash
  #       if: ${{ env.ACT }} 
  #       run: |
  #         docker compose run -d postgres
  #         docker compose run --rm unit pytest -vv tests/unit

  integration:
    # needs: [precommit, unit]
    runs-on: ubuntu-latest
    container: docker:20.10.16
    permissions:
      id-token: write
      contents: read
    env:
      TF_VAR_testing_secondary_aws_account_id: ${{ secrets.TESTING_SECONDARY_AWS_ACCOUNT_ID }}
      TF_VAR_testing_sender_email: ${{ secrets.TESTING_SENDER_EMAIL }}
    steps:
      - name: Install Deps
        id: act_integration_install_deps
        shell: sh
        run: |
          apk update
          # use git version > 2.20 for actions/checkout@v3 step see issue: https://github.com/actions/checkout/issues/335#issuecomment-689531448
          # and git version < 2.35.2 to skip adding repo to git conifg safe directory
          apk add --update nodejs npm git
      - uses: actions/checkout@v3
      - name: mask sensitive
        run: |
          echo "::add-mask::$TF_VAR_testing_github_token"
          echo "::add-mask::$TF_VAR_testing_secondary_aws_account_id"
          echo "::add-mask::$TF_VAR_testing_sender_email"

      - name: Configure AWS Credentials for remote workflow
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ !env.ACT }}
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS Credentials for local workflow
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ env.ACT }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Tests
        id: pytest_integration
        shell: sh
        run: |
          
          chmod -R 775 $PWD
          docker compose run --rm --entrypoint="" integration pwd && ls -la && docker --version