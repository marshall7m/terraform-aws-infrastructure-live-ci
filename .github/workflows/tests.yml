name: Tests
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
    - master
    tags:
    - ci
    - tests
    paths-ignore:
    - .gitignore
    - '**.md'
    - docker/**
    - .github/workflows/build.yml

  push:
    branches:
    - master
    tags:
    - ci
    - tests
    paths-ignore:
    - .gitignore
    - '**.md'
    - docker/**
    - .github/workflows/build.yml

env:
  PYTEST_ADDOPTS: --color=yes
  PYTHON_VERSION: pypy-3.9
  AWS_REGION: us-west-2
  AWS_DEFAULT_REGION: us-west-2
  DEV_DOCKER_IMG: dev
jobs:
  precommit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Hooks
      shell: bash
      run: docker compose -f ./.devcontainer/docker-compose.yml run dev pre-commit run -a

    - name: Update README.md TOC
      id: readme_toc
      shell: bash
      if: ${{ !env.ACT }}
      run: |
        curl https://raw.githubusercontent.com/ekalinin/github-markdown-toc/0.8.0/gh-md-toc -o gh-md-toc
        chmod a+x gh-md-toc
        ./gh-md-toc --insert --no-backup --hide-footer README.md DESIGN.md CONTRIBUTING.md
        rm gh-md-toc

    - uses: stefanzweifel/git-auto-commit-action@v4
      # if: ${{ !env.ACT }}
      with:
        skip_dirty_check: true
        commit_message: Auto update markdown TOC

  unit:
    # needs: precommit
    runs-on: ubuntu-latest
    env:
      TESTING_GITHUB_TOKEN: ${{ secrets.TESTING_GITHUB_TOKEN }}
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3

    - name: mask sensitive
      run: echo "::add-mask::$TESTING_GITHUB_TOKEN"

    - name: Tests
      shell: bash
      run: docker compose -f ./.devcontainer/docker-compose.yml run dev pytest -vv tests/unit

  integration:
    # needs: [precommit, unit]
    runs-on: ubuntu-latest
    env:
      TESTING_GITHUB_TOKEN: ${{ secrets.TESTING_GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3

    - name: mask sensitive
      run: echo "::add-mask::$TESTING_GITHUB_TOKEN"

    - name: Tests
      shell: bash
      run: docker compose -f ./.devcontainer/docker-compose.yml run dev pytest -vv tests/integration

  e2e:
    needs: [precommit, unit, integration]
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TESTING_GITHUB_TOKEN: ${{ secrets.TESTING_GITHUB_TOKEN }}
      REGISTRY_PASSWORD: ${{ secrets.TESTING_GITHUB_TOKEN }}
      APPROVAL_REQUEST_SENDER_EMAIL: ${{ secrets.APPROVAL_REQUEST_SENDER_EMAIL }}
    steps:
    - uses: actions/checkout@v3

    - name: mask sensitive
      run: |
        echo "::add-mask::$TESTING_GITHUB_TOKEN"
        echo "::add-mask::$REGISTRY_PASSWORD"
        echo "::add-mask::$APPROVAL_REQUEST_SENDER_EMAIL"

    - name: Configure AWS Credentials for remote workflow
      uses: aws-actions/configure-aws-credentials@v1
      if: ${{ !env.ACT }}
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
        role-duration-seconds: 21600   # 6hrs

    - name: Configure AWS Credentials for local workflow
      uses: aws-actions/configure-aws-credentials@v1
      if: ${{ env.ACT }}
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Tests
      shell: bash
      run: docker compose -f ./.devcontainer/docker-compose.yml run dev pytest -vv tests/e2e
